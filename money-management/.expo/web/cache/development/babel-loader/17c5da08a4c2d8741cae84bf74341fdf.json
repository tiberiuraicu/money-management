{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default {\n  setItem: function setItem(key, value) {\n    return _regeneratorRuntime.async(function setItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(value)));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  },\n  getItem: function getItem(key) {\n    var _item;\n\n    return _regeneratorRuntime.async(function getItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            _item = _context2.sent;\n            return _context2.abrupt(\"return\", _item);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  },\n  removeItem: function removeItem(key) {\n    return _regeneratorRuntime.async(function removeItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            _context3.next = 7;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  },\n  updateItem: function updateItem(key, value) {\n    var _item2, result;\n\n    return _regeneratorRuntime.async(function updateItem$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            _item2 = _context4.sent;\n            result = _objectSpread(_objectSpread({}, JSON.parse(_item2)), value);\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(result)));\n\n          case 7:\n            _context4.next = 11;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  },\n  clearAllData: function clearAllData() {\n    return _regeneratorRuntime.async(function clearAllData$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys().then(function (keys) {\n              return AsyncStorage.multiRemove(keys);\n            }).then(function () {\n              return alert(\"success\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAllItems: function getAllItems() {\n    var items, keys;\n    return _regeneratorRuntime.async(function getAllItems$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            items = [];\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 4:\n            keys = _context6.sent;\n            _context6.t0 = _regeneratorRuntime.keys(keys);\n\n          case 6:\n            if ((_context6.t1 = _context6.t0()).done) {\n              _context6.next = 14;\n              break;\n            }\n\n            key = _context6.t1.value;\n            _context6.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(keys[key]));\n\n          case 10:\n            item = _context6.sent;\n            items.push(item);\n            _context6.next = 6;\n            break;\n\n          case 14:\n            return _context6.abrupt(\"return\", items);\n\n          case 17:\n            _context6.prev = 17;\n            _context6.t2 = _context6[\"catch\"](0);\n            console.log(_context6.t2);\n\n          case 20:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  }\n};","map":{"version":3,"sources":["D:/react native/money-management/services/storageServices.js"],"names":["AsyncStorage","setItem","key","value","JSON","stringify","getItem","item","console","log","removeItem","updateItem","result","parse","clearAllData","getAllKeys","then","keys","multiRemove","alert","getAllItems","items","push"],"mappings":";;;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE,iBAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAECH,YAAY,CAACC,OAAb,CAAqBC,GAArB,EAA0BE,IAAI,CAACC,SAAL,CAAeF,KAAf,CAA1B,CAFD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADI;AAMbG,EAAAA,OAAO,EAAE,iBAAOJ,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcF,YAAY,CAACM,OAAb,CAAqBJ,GAArB,CAFd;;AAAA;AAECK,YAAAA,KAFD;AAAA,8CAIEA,KAJF;;AAAA;AAAA;AAAA;AAMLC,YAAAA,OAAO,CAACC,GAAR;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANI;AAebC,EAAAA,UAAU,EAAE,oBAAOR,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFF,YAAY,CAACU,UAAb,CAAwBR,GAAxB,CAFE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAfC;AAoBbS,EAAAA,UAAU,EAAE,oBAAOT,GAAP,EAAYC,KAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWH,YAAY,CAACM,OAAb,CAAqBJ,GAArB,CAFX;;AAAA;AAEFK,YAAAA,MAFE;AAGFK,YAAAA,MAHE,mCAGYR,IAAI,CAACS,KAAL,CAAWN,MAAX,CAHZ,GAGiCJ,KAHjC;AAAA;AAAA,6CAKFH,YAAY,CAACC,OAAb,CAAqBC,GAArB,EAA0BE,IAAI,CAACC,SAAL,CAAeO,MAAf,CAA1B,CALE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApBC;AA4BbE,EAAAA,YAAY,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNd,YAAY,CAACe,UAAb,GACHC,IADG,CACE,UAACC,IAAD;AAAA,qBAAUjB,YAAY,CAACkB,WAAb,CAAyBD,IAAzB,CAAV;AAAA,aADF,EAEHD,IAFG,CAEE;AAAA,qBAAMG,KAAK,CAAC,SAAD,CAAX;AAAA,aAFF,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA5BD;AAiCbC,EAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,KAFK,GAEG,EAFH;AAAA;AAAA,6CAGQrB,YAAY,CAACe,UAAb,EAHR;;AAAA;AAGLE,YAAAA,IAHK;AAAA,oDAIGA,IAJH;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIJf,YAAAA,GAJI;AAAA;AAAA,6CAKMF,YAAY,CAACM,OAAb,CAAqBW,IAAI,CAACf,GAAD,CAAzB,CALN;;AAAA;AAKPK,YAAAA,IALO;AAMPc,YAAAA,KAAK,CAACC,IAAN,CAAWf,IAAX;AANO;AAAA;;AAAA;AAAA,8CAQFc,KARE;;AAAA;AAAA;AAAA;AAUTb,YAAAA,OAAO,CAACC,GAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCA,CAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport default {\r\n  setItem: async (key, value) => {\r\n    try {\r\n      await AsyncStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {}\r\n  },\r\n  getItem: async (key) => {\r\n    try {\r\n      const item = await AsyncStorage.getItem(key);\r\n\r\n      return item;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  removeItem: async (key) => {\r\n    try {\r\n      await AsyncStorage.removeItem(key);\r\n    } catch (error) {}\r\n  },\r\n  updateItem: async (key, value) => {\r\n    try {\r\n      const item = await AsyncStorage.getItem(key);\r\n      const result = { ...JSON.parse(item), ...value };\r\n\r\n      await AsyncStorage.setItem(key, JSON.stringify(result));\r\n    } catch (error) {}\r\n  },\r\n  clearAllData: async () => {\r\n    await AsyncStorage.getAllKeys()\r\n      .then((keys) => AsyncStorage.multiRemove(keys))\r\n      .then(() => alert(\"success\"));\r\n  },\r\n  getAllItems: async () => {\r\n    try {\r\n      var items = [];\r\n      var keys = await AsyncStorage.getAllKeys();\r\n      for (key in keys) {\r\n        item = await AsyncStorage.getItem(keys[key]);\r\n        items.push(item);\r\n      }\r\n      return items;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}