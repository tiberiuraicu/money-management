{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\money-management-project\\\\money-management\\\\components\\\\Portofolio\\\\Portofolio.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport * as portofolioServices from \"./Portofolio.services\";\nimport styles from \"./Portofolio.styles\";\n\nvar Portofolio = function Portofolio(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownedSharesList = _useState2[0],\n      setOwnedSharesList = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      portofolioValue = _useState4[0],\n      setPortofolioValue = _useState4[1];\n\n  function setPortofolioValueHandler() {\n    var _await$portofolioServ, _await$portofolioServ2, portofolioValue, sharesAnalyticsList;\n\n    return _regeneratorRuntime.async(function setPortofolioValueHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = console;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(portofolioServices.getAnalyticsForAllShares());\n\n          case 3:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, _context.t1);\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(portofolioServices.getAnalyticsForAllShares());\n\n          case 7:\n            _await$portofolioServ = _context.sent;\n            _await$portofolioServ2 = _slicedToArray(_await$portofolioServ, 2);\n            portofolioValue = _await$portofolioServ2[0];\n            sharesAnalyticsList = _await$portofolioServ2[1];\n            setOwnedSharesList(sharesAnalyticsList);\n            setPortofolioValue(portofolioValue.toFixed(2));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (isFocused) {\n      setPortofolioValueHandler();\n    }\n  }, [isFocused]);\n\n  var getProfitLossColor = function getProfitLossColor(number) {\n    var itemCardText = {\n      color: \"#374046\",\n      fontStyle: \"italic\"\n    };\n    if (number > 0) itemCardText[\"color\"] = \"green\";\n    if (number < 0) itemCardText[\"color\"] = \"red\";\n    return itemCardText;\n  };\n\n  return React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.portofolioValueContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.portofolioValueText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Portofolio value \", portofolioValue)), React.createElement(TouchableOpacity, {\n    style: styles.addTransactionButton,\n    onPress: function onPress() {\n      navigation.navigate(\"AddNewTransaction\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.addTransactionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"ADD HOLDINGS\")), React.createElement(View, {\n    style: styles.itemlist,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: ownedSharesList,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"SharePage\", {\n            symbol: itemData.item.symbol\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        key: itemData.item.symbol,\n        style: styles.shareCardData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardCompanyName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, itemData.item.companyName)), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"Total value\"), React.createElement(Text, {\n        style: styles.itemCardLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, Number(itemData.item.shareTotalValue).toFixed(2))), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, \"Profit/Loss \"), React.createElement(Text, {\n        style: getProfitLossColor(Number(itemData.item.shareTotalProfit).toFixed(2)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, Number(itemData.item.shareTotalProfit).toFixed(2)))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Portofolio;","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/components/Portofolio/Portofolio.js"],"names":["React","useState","useEffect","useIsFocused","portofolioServices","styles","Portofolio","navigation","isFocused","ownedSharesList","setOwnedSharesList","portofolioValue","setPortofolioValue","setPortofolioValueHandler","console","getAnalyticsForAllShares","log","sharesAnalyticsList","toFixed","getProfitLossColor","number","itemCardText","color","fontStyle","listContainer","portofolioValueContainer","portofolioValueText","addTransactionButton","navigate","addTransactionText","itemlist","itemData","symbol","item","shareCardData","itemCardCompanyName","companyName","alanyticView","itemCardLabel","Number","shareTotalValue","shareTotalProfit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, FlatList, Text, TouchableOpacity } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport * as portofolioServices from \"./Portofolio.services\";\r\nimport styles from \"./Portofolio.styles\";\r\n\r\nconst Portofolio = ({ navigation }) => {\r\n  const isFocused = useIsFocused();\r\n\r\n  const [ownedSharesList, setOwnedSharesList] = useState([]);\r\n  const [portofolioValue, setPortofolioValue] = useState();\r\n\r\n  async function setPortofolioValueHandler() {\r\n    console.log(await portofolioServices.getAnalyticsForAllShares());\r\n    const [portofolioValue, sharesAnalyticsList] =\r\n      await portofolioServices.getAnalyticsForAllShares();\r\n    setOwnedSharesList(sharesAnalyticsList);\r\n\r\n    setPortofolioValue(portofolioValue.toFixed(2));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setPortofolioValueHandler();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  const getProfitLossColor = (number) => {\r\n    let itemCardText = {\r\n      color: \"#374046\",\r\n      fontStyle: \"italic\",\r\n    };\r\n\r\n    if (number > 0) itemCardText[\"color\"] = \"green\";\r\n    if (number < 0) itemCardText[\"color\"] = \"red\";\r\n\r\n    return itemCardText;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.listContainer}>\r\n      <View style={styles.portofolioValueContainer}>\r\n        <Text style={styles.portofolioValueText}>\r\n          Portofolio value {portofolioValue}\r\n        </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.addTransactionButton}\r\n        onPress={() => {\r\n          navigation.navigate(\"AddNewTransaction\");\r\n        }}\r\n      >\r\n        <Text style={styles.addTransactionText}>ADD HOLDINGS</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.itemlist}>\r\n        <FlatList\r\n          data={ownedSharesList}\r\n          renderItem={(itemData) => (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                navigation.navigate(\"SharePage\", {\r\n                  symbol: itemData.item.symbol,\r\n                })\r\n              }\r\n            >\r\n              <View key={itemData.item.symbol} style={styles.shareCardData}>\r\n                <View>\r\n                  <Text style={styles.itemCardCompanyName}>\r\n                    {itemData.item.companyName}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.alanyticView}>\r\n                  <Text style={styles.itemCardLabel}>Total value</Text>\r\n                  <Text style={styles.itemCardLabel}>\r\n                    {Number(itemData.item.shareTotalValue).toFixed(2)}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.alanyticView}>\r\n                  <Text style={styles.itemCardLabel}>Profit/Loss </Text>\r\n                  <Text\r\n                    style={getProfitLossColor(\r\n                      Number(itemData.item.shareTotalProfit).toFixed(2)\r\n                    )}\r\n                  >\r\n                    {Number(itemData.item.shareTotalProfit).toFixed(2)}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Portofolio;\r\n"]},"metadata":{},"sourceType":"module"}