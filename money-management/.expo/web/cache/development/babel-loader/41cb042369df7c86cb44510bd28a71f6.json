{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\money-management-project\\\\money-management\\\\components\\\\WatchList\\\\WatchList.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { getWatchList } from \"./WatchList.services\";\nimport styles from \"./WatchList.styles\";\n\nvar WatchList = function WatchList(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      watchListSharesList = _useState2[0],\n      setWatchListSharesList = _useState2[1];\n\n  function setWatchListSharesListHandler() {\n    return _regeneratorRuntime.async(function setWatchListSharesListHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setWatchListSharesList;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getWatchList());\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (isFocused) {\n      setWatchListSharesListHandler();\n    }\n  }, [isFocused]);\n\n  var getProfitLossColor = function getProfitLossColor(number) {\n    var itemCardText = {\n      color: \"#374046\",\n      fontStyle: \"italic\"\n    };\n    if (number > 0) itemCardText[\"color\"] = \"green\";\n    if (number < 0) itemCardText[\"color\"] = \"red\";\n    return itemCardText;\n  };\n\n  function getExtendedHours(item) {\n    if (item.marketState === \"POST\") return;\n    React.createElement(View, {\n      style: styles.alanyticView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.itemCardText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"Extended hours price \"), React.createElement(Text, {\n      style: getProfitLossColor(item.extendedHoursChange),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, item.extendedHoursPrice, \"  \", item.extendedHoursChange, \" ( \", item.extendedHoursChangePercent * 100, \")\"));\n    if (item.marketState === \"PRE\") return React.createElement(View, {\n      style: styles.alanyticView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.itemCardText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Extended hours price \"), React.createElement(Text, {\n      style: getProfitLossColor(item.extendedHoursChange),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, item.extendedHoursPrice, \"  \", item.extendedHoursChange, \" ( \", item.extendedHoursChangePercent * 100, \")\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.itemlist,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: watchListSharesList,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"SharePage\", {\n            symbol: itemData.item.symbol\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        key: itemData.item.symbol,\n        style: styles.shareCardData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardCompanyName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, itemData.item.symbol)), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, \"Regular market price \"), React.createElement(Text, {\n        style: getProfitLossColor(itemData.item.regularMarketChange),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, itemData.item.regularMarketPrice, \"  \", itemData.item.regularMarketChange, \" (\", \" \", itemData.item.regularMarketChangePercent, \")\")), getExtendedHours(itemData.item)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WatchList;","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/components/WatchList/WatchList.js"],"names":["React","useState","useEffect","useIsFocused","getWatchList","styles","WatchList","navigation","isFocused","watchListSharesList","setWatchListSharesList","setWatchListSharesListHandler","getProfitLossColor","number","itemCardText","color","fontStyle","getExtendedHours","item","marketState","alanyticView","extendedHoursChange","extendedHoursPrice","extendedHoursChangePercent","listContainer","itemlist","itemData","navigate","symbol","shareCardData","itemCardCompanyName","regularMarketChange","regularMarketPrice","regularMarketChangePercent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, FlatList, Text, TouchableOpacity } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { getWatchList } from \"./WatchList.services\";\r\nimport styles from \"./WatchList.styles\";\r\n\r\nconst WatchList = ({ navigation }) => {\r\n  const isFocused = useIsFocused();\r\n\r\n  const [watchListSharesList, setWatchListSharesList] = useState([]);\r\n\r\n  async function setWatchListSharesListHandler() {\r\n    setWatchListSharesList(await getWatchList());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setWatchListSharesListHandler();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  //PRE(premaket), REGULAR(regular)\r\n  const getProfitLossColor = (number) => {\r\n    let itemCardText = {\r\n      color: \"#374046\",\r\n      fontStyle: \"italic\",\r\n    };\r\n\r\n    if (number > 0) itemCardText[\"color\"] = \"green\";\r\n    if (number < 0) itemCardText[\"color\"] = \"red\";\r\n\r\n    return itemCardText;\r\n  };\r\n  function getExtendedHours(item) {\r\n    if (item.marketState === \"POST\") return;\r\n    <View style={styles.alanyticView}>\r\n      <Text style={styles.itemCardText}>Extended hours price </Text>\r\n      <Text style={getProfitLossColor(item.extendedHoursChange)}>\r\n        {item.extendedHoursPrice}\r\n        {\"  \"}\r\n        {item.extendedHoursChange} ( {item.extendedHoursChangePercent * 100})\r\n      </Text>\r\n    </View>;\r\n    if (item.marketState === \"PRE\")\r\n      return (\r\n        <View style={styles.alanyticView}>\r\n          <Text style={styles.itemCardText}>Extended hours price </Text>\r\n          <Text style={getProfitLossColor(item.extendedHoursChange)}>\r\n            {item.extendedHoursPrice}\r\n            {\"  \"}\r\n            {item.extendedHoursChange} ( {item.extendedHoursChangePercent * 100}\r\n            )\r\n          </Text>\r\n        </View>\r\n      );\r\n  }\r\n  return (\r\n    <View style={styles.listContainer}>\r\n      <View style={styles.itemlist}>\r\n        <FlatList\r\n          data={watchListSharesList}\r\n          renderItem={(itemData) => (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                navigation.navigate(\"SharePage\", {\r\n                  symbol: itemData.item.symbol,\r\n                })\r\n              }\r\n            >\r\n              <View key={itemData.item.symbol} style={styles.shareCardData}>\r\n                <View>\r\n                  <Text style={styles.itemCardCompanyName}>\r\n                    {itemData.item.symbol}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View style={styles.alanyticView}>\r\n                  <Text style={styles.itemCardText}>Regular market price </Text>\r\n                  <Text\r\n                    style={getProfitLossColor(\r\n                      itemData.item.regularMarketChange\r\n                    )}\r\n                  >\r\n                    {itemData.item.regularMarketPrice}\r\n                    {\"  \"}\r\n                    {itemData.item.regularMarketChange} ({\" \"}\r\n                    {itemData.item.regularMarketChangePercent})\r\n                  </Text>\r\n                </View>\r\n                {getExtendedHours(itemData.item)}\r\n              </View>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WatchList;\r\n"]},"metadata":{},"sourceType":"module"}