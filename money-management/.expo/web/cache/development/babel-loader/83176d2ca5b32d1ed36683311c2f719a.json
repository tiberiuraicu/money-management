{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport yahooFinance from \"yahoo-finance2\";\nimport * as storage from \"../services/storageServices\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nexport default {\n  getShareHistory: function getShareHistory(symbol) {\n    var shareHistory;\n    return _regeneratorRuntime.async(function getShareHistory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(storage.default.getItem(symbol));\n\n          case 2:\n            shareHistory = _context.sent;\n            shareHistory = JSON.parse(shareHistory);\n            return _context.abrupt(\"return\", shareHistory.transactions);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getShareEarnings: function getShareEarnings(symbol) {\n    return _regeneratorRuntime.async(function getShareEarnings$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(yahooFinance.quoteSummary(symbol, {\n              modules: [\"earnings\"]\n            }));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getSharePrice: function getSharePrice(symbol) {\n    return _regeneratorRuntime.async(function getSharePrice$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(yahooFinance.quoteSummary(symbol, {\n              modules: [\"price\"]\n            }));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getShareMetrics: function getShareMetrics(symbol) {\n    return _regeneratorRuntime.async(function getShareMetrics$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(yahooFinance.quote(symbol));\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAutoCompleteData: function getAutoCompleteData(text) {\n    var suggestions, result;\n    return _regeneratorRuntime.async(function getAutoCompleteData$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            suggestions = [];\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(yahooFinance.search(text));\n\n          case 4:\n            result = _context5.sent;\n            console.log(result);\n            result.quotes.map(function (item) {\n              if (item[\"symbol\"] !== undefined) suggestions.push({\n                id: item[\"symbol\"],\n                symbol: function () {\n                  if (item[\"symbol\"].length > 7) return String(item[\"symbol\"]).substring(0, 7) + \"...\";else return String(item[\"symbol\"]);\n                }(),\n                name: function () {\n                  if (item[\"shortname\"].length > 30) return String(item[\"shortname\"]).substring(0, 35) + \"...\";else return String(item[\"shortname\"]);\n                }()\n              });\n            });\n            _context5.next = 11;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](1);\n\n          case 11:\n            return _context5.abrupt(\"return\", suggestions);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  },\n  askPermissions: function askPermissions() {\n    var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function askPermissions$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 2:\n            _await$Permissions$ge = _context6.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== \"granted\")) {\n              _context6.next = 11;\n              break;\n            }\n\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 8:\n            _await$Permissions$as = _context6.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n\n          case 11:\n            if (!(finalStatus !== \"granted\")) {\n              _context6.next = 13;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", false);\n\n          case 13:\n            return _context6.abrupt(\"return\", true);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  sendNotificationImmediately: function sendNotificationImmediately(symbol) {\n    return _regeneratorRuntime.async(function sendNotificationImmediately$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n              content: {\n                title: \"You've got \" + symbol,\n                body: \"Here is the notification body\",\n                data: {\n                  data: \"goes here\"\n                }\n              },\n              trigger: {\n                seconds: 1\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/services/financeServices.js"],"names":["yahooFinance","storage","Notifications","Permissions","getShareHistory","symbol","default","getItem","shareHistory","JSON","parse","transactions","getShareEarnings","quoteSummary","modules","getSharePrice","getShareMetrics","quote","getAutoCompleteData","text","suggestions","search","result","console","log","quotes","map","item","undefined","push","id","length","String","substring","name","askPermissions","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","sendNotificationImmediately","scheduleNotificationAsync","content","title","body","data","trigger","seconds"],"mappings":"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","sourcesContent":["import yahooFinance from \"yahoo-finance2\";\r\nimport * as storage from \"../services/storageServices\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\n\r\nexport default {\r\n  async getShareHistory(symbol) {\r\n    var shareHistory = await storage.default.getItem(symbol);\r\n    shareHistory = JSON.parse(shareHistory);\r\n\r\n    //return the current share transactions\r\n    return shareHistory.transactions;\r\n  },\r\n  async getShareEarnings(symbol) {\r\n    return await yahooFinance.quoteSummary(symbol, {\r\n      modules: [\"earnings\"],\r\n    });\r\n  },\r\n\r\n  async getSharePrice(symbol) {\r\n    return await yahooFinance.quoteSummary(symbol, {\r\n      modules: [\"price\"],\r\n    });\r\n  },\r\n\r\n  async getShareMetrics(symbol) {\r\n    return await yahooFinance.quote(symbol);\r\n  },\r\n\r\n  async getAutoCompleteData(text) {\r\n    // create array for storing suggestions for autocomplete\r\n    var suggestions = [];\r\n    try {\r\n      const result = await yahooFinance.search(text /* queryOptions */);\r\n      console.log(result);\r\n\r\n      //get the suggested symbols\r\n      result.quotes.map((item) => {\r\n        if (item[\"symbol\"] !== undefined)\r\n          suggestions.push({\r\n            id: item[\"symbol\"],\r\n            symbol: (() => {\r\n              if (item[\"symbol\"].length > 7)\r\n                return String(item[\"symbol\"]).substring(0, 7) + \"...\";\r\n              else return String(item[\"symbol\"]);\r\n            })(),\r\n            name: (() => {\r\n              if (item[\"shortname\"].length > 30)\r\n                return String(item[\"shortname\"]).substring(0, 35) + \"...\";\r\n              else return String(item[\"shortname\"]);\r\n            })(),\r\n          });\r\n      });\r\n    } catch (error) {}\r\n    return suggestions;\r\n  },\r\n  // test notifications\r\n  async askPermissions() {\r\n    const { status: existingStatus } = await Permissions.getAsync(\r\n      Permissions.NOTIFICATIONS\r\n    );\r\n    let finalStatus = existingStatus;\r\n    if (existingStatus !== \"granted\") {\r\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n      finalStatus = status;\r\n    }\r\n    if (finalStatus !== \"granted\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  async sendNotificationImmediately(symbol) {\r\n    await Notifications.scheduleNotificationAsync({\r\n      content: {\r\n        title: \"You've got \" + symbol,\r\n        body: \"Here is the notification body\",\r\n        data: { data: \"goes here\" },\r\n      },\r\n      trigger: { seconds: 1 },\r\n    });\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}