{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as storage from \"../../services/storageServices\";\nexport function getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\nexport function addTransaction(transaction, symbol) {\n  var portofolio, share, portofolioFromStorage;\n  return _regeneratorRuntime.async(function addTransaction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          portofolio = {\n            shares: {}\n          };\n          share = {\n            symbol: symbol,\n            transactions: [],\n            pieChartColor: \"\"\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(storage.default.getItem(\"portofolio\"));\n\n        case 5:\n          portofolioFromStorage = _context.sent;\n\n          if (portofolioFromStorage !== null) {\n            portofolioFromStorage = JSON.parse(portofolioFromStorage);\n\n            if (portofolioFromStorage.shares[symbol] !== undefined) {\n              portofolioFromStorage.shares[symbol].transactions.push(transaction);\n            } else {\n              share.pieChartColor = getRandomColor();\n              share.transactions.push(transaction);\n              portofolioFromStorage.shares[symbol] = share;\n            }\n\n            storage.default.updateItem(\"portofolio\", portofolioFromStorage);\n          } else if (portofolioFromStorage === null) {\n            share.pieChartColor = getRandomColor();\n            share.transactions.push(transaction);\n            portofolio.shares[symbol] = share;\n            storage.default.setItem(\"portofolio\", portofolio);\n          }\n\n          Alert.alert(\"\", \"Transaction added\");\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n          Alert.alert(\"\", \"Error in adding share\");\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/components/AddNewTransaction/AddNewTransaction.services.js"],"names":["storage","getRandomColor","letters","color","i","Math","floor","random","addTransaction","transaction","symbol","portofolio","shares","share","transactions","pieChartColor","default","getItem","portofolioFromStorage","JSON","parse","undefined","push","updateItem","setItem","Alert","alert","console","log","message"],"mappings":";;AACA,OAAO,KAAKA,OAAZ;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAIC,OAAO,GAAG,kBAAd;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,SAAOJ,KAAP;AACD;AAkCD,OAAO,SAAeK,cAAf,CAA8BC,WAA9B,EAA2CC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,UAAAA,UAFD,GAEc;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAFd;AAGCC,UAAAA,KAHD,GAGS;AACVH,YAAAA,MAAM,EAAEA,MADE;AAEVI,YAAAA,YAAY,EAAE,EAFJ;AAGVC,YAAAA,aAAa,EAAE;AAHL,WAHT;AAAA;AAAA,2CAQ+Bf,OAAO,CAACgB,OAAR,CAAgBC,OAAhB,CAAwB,YAAxB,CAR/B;;AAAA;AAQCC,UAAAA,qBARD;;AASH,cAAIA,qBAAqB,KAAK,IAA9B,EAAoC;AAClCA,YAAAA,qBAAqB,GAAGC,IAAI,CAACC,KAAL,CAAWF,qBAAX,CAAxB;;AACA,gBAAIA,qBAAqB,CAACN,MAAtB,CAA6BF,MAA7B,MAAyCW,SAA7C,EAAwD;AACtDH,cAAAA,qBAAqB,CAACN,MAAtB,CAA6BF,MAA7B,EAAqCI,YAArC,CAAkDQ,IAAlD,CAAuDb,WAAvD;AACD,aAFD,MAEO;AACLI,cAAAA,KAAK,CAACE,aAAN,GAAsBd,cAAc,EAApC;AACAY,cAAAA,KAAK,CAACC,YAAN,CAAmBQ,IAAnB,CAAwBb,WAAxB;AACAS,cAAAA,qBAAqB,CAACN,MAAtB,CAA6BF,MAA7B,IAAuCG,KAAvC;AACD;;AACDb,YAAAA,OAAO,CAACgB,OAAR,CAAgBO,UAAhB,CAA2B,YAA3B,EAAyCL,qBAAzC;AACD,WAVD,MAUO,IAAIA,qBAAqB,KAAK,IAA9B,EAAoC;AACzCL,YAAAA,KAAK,CAACE,aAAN,GAAsBd,cAAc,EAApC;AACAY,YAAAA,KAAK,CAACC,YAAN,CAAmBQ,IAAnB,CAAwBb,WAAxB;AACAE,YAAAA,UAAU,CAACC,MAAX,CAAkBF,MAAlB,IAA4BG,KAA5B;AACAb,YAAAA,OAAO,CAACgB,OAAR,CAAgBQ,OAAhB,CAAwB,YAAxB,EAAsCb,UAAtC;AACD;;AACDc,UAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgB,mBAAhB;AAzBG;AAAA;;AAAA;AAAA;AAAA;AA2BHC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAUC,OAAtB;AACAJ,UAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgB,uBAAhB;;AA5BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Alert } from \"react-native\";\r\nimport * as storage from \"../../services/storageServices\";\r\n\r\nexport function getRandomColor() {\r\n  var letters = \"0123456789ABCDEF\";\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\n// export async function addTransaction(transaction, symbol) {\r\n//   try {\r\n//     var share = {\r\n//       symbol: symbol,\r\n//       transactions: [],\r\n//       pieChartColor: \"\",\r\n//     };\r\n//     var shareList = await storage.default.getAllItems();\r\n//     var symbolExists = false;\r\n//     if (shareList.length != 0)\r\n//       for (var i in shareList) {\r\n//         if (JSON.parse(shareList[i]).symbol === symbol) {\r\n//           symbolExists = true;\r\n//           break;\r\n//         }\r\n//       }\r\n//     if (symbolExists) {\r\n//       share = await storage.default.getItem(symbol);\r\n//       share = JSON.parse(share);\r\n//       share.transactions.push(transaction);\r\n//       storage.default.updateItem(symbol, share);\r\n//     } else {\r\n//       share.pieChartColor = getRandomColor();\r\n//       share.transactions.push(transaction);\r\n//       storage.default.setItem(symbol, share);\r\n//     }\r\n//     Alert.alert(\"\", \"Transaction added\");\r\n//   } catch (exception) {\r\n//     console.log(exception.message);\r\n//     Alert.alert(\"\", \"Error in adding share\");\r\n//   }\r\n// }\r\nexport async function addTransaction(transaction, symbol) {\r\n  try {\r\n    var portofolio = { shares: {} };\r\n    var share = {\r\n      symbol: symbol,\r\n      transactions: [],\r\n      pieChartColor: \"\",\r\n    };\r\n    var portofolioFromStorage = await storage.default.getItem(\"portofolio\");\r\n    if (portofolioFromStorage !== null) {\r\n      portofolioFromStorage = JSON.parse(portofolioFromStorage);\r\n      if (portofolioFromStorage.shares[symbol] !== undefined) {\r\n        portofolioFromStorage.shares[symbol].transactions.push(transaction);\r\n      } else {\r\n        share.pieChartColor = getRandomColor();\r\n        share.transactions.push(transaction);\r\n        portofolioFromStorage.shares[symbol] = share;\r\n      }\r\n      storage.default.updateItem(\"portofolio\", portofolioFromStorage);\r\n    } else if (portofolioFromStorage === null) {\r\n      share.pieChartColor = getRandomColor();\r\n      share.transactions.push(transaction);\r\n      portofolio.shares[symbol] = share;\r\n      storage.default.setItem(\"portofolio\", portofolio);\r\n    }\r\n    Alert.alert(\"\", \"Transaction added\");\r\n  } catch (exception) {\r\n    console.log(exception.message);\r\n    Alert.alert(\"\", \"Error in adding share\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}