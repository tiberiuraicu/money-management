{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\money-management\\\\components\\\\ItemList.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport * as financeServices from \"../services/financeServices\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { PieChart } from \"react-native-chart-kit\";\n\nvar ItemList = function ItemList(pops) {\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemList = _useState2[0],\n      setItemList = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      portofolioValue = _useState4[0],\n      setPortofolioValue = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chartData = _useState6[0],\n      setchartData = _useState6[1];\n\n  function getRandomColor() {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  function setPortofolioValueHandler() {\n    var sharesAnalyticsList, portofolioValue, data;\n    return _regeneratorRuntime.async(function setPortofolioValueHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(financeServices.default.getAnalyticsForAllShares());\n\n          case 2:\n            sharesAnalyticsList = _context.sent;\n            portofolioValue = 0;\n            data = [];\n            sharesAnalyticsList.map(function (item) {\n              portofolioValue += item.shareTotalValue;\n              data.push({\n                name: item.symbol,\n                population: item.shareTotalValue,\n                color: getRandomColor(),\n                legendFontColor: \"#7F7F7F\",\n                legendFontSize: 15\n              });\n            });\n            setchartData(data);\n            setPortofolioValue(portofolioValue.toFixed(2));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function setItemListHandler() {\n    return _regeneratorRuntime.async(function setItemListHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = setItemList;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(financeServices.default.getAnalyticsForAllShares());\n\n          case 3:\n            _context2.t1 = _context2.sent;\n            (0, _context2.t0)(_context2.t1);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (isFocused) {\n      setItemListHandler();\n      setPortofolioValueHandler();\n    }\n  }, [isFocused]);\n  return React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.portofolioValueText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.portofolioValueText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Portofolio value \", portofolioValue)), React.createElement(PieChart, {\n    data: chartData,\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    paddingLeft: \"15\",\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFrom: \"#fb8c00\",\n      backgroundGradientTo: \"#ffa726\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    style: styles.itemlist,\n    data: itemList,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        key: itemData.item.symbol,\n        style: styles.shareCardData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, \"Symbol \"), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, itemData.item.symbol)), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, \"Current Price\"), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, Number(itemData.item.currentPrice).toFixed(2))), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, \"Total value\"), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, Number(itemData.item.shareTotalValue).toFixed(2))), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Profit \"), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, Number(itemData.item.shareTotalProfit).toFixed(2))), React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"Average price\"), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, Number(itemData.item.averageEntryPrice).toFixed(2))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  listContainer: {\n    width: \"100%\",\n    height: \"80%\",\n    marginTop: \"10%\"\n  },\n  button: {\n    margin: 10\n  },\n  itemlist: {\n    height: \"80%\"\n  },\n  shareCardData: {\n    height: 120,\n    marginLeft: 19,\n    marginRight: 31,\n    marginBottom: \"2%\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 10,\n    shadowColor: \"#000000\",\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    }\n  },\n  routingButton: {\n    alignSelf: \"flex-end\"\n  },\n  alanyticView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  itemCardText: {\n    color: \"#374046\"\n  },\n  portofolioValue: {\n    width: \"90%\"\n  },\n  portofolioValueText: {\n    width: \"80%\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginLeft: \"10%\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 10,\n    shadowColor: \"#000000\",\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    }\n  }\n});\nexport default ItemList;","map":{"version":3,"sources":["D:/react native/money-management/components/ItemList.js"],"names":["React","useState","useEffect","useIsFocused","financeServices","PieChart","ItemList","pops","isFocused","itemList","setItemList","portofolioValue","setPortofolioValue","chartData","setchartData","getRandomColor","letters","color","i","Math","floor","random","setPortofolioValueHandler","default","getAnalyticsForAllShares","sharesAnalyticsList","data","map","item","shareTotalValue","push","name","symbol","population","legendFontColor","legendFontSize","toFixed","setItemListHandler","styles","listContainer","portofolioValueText","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","style","borderRadius","itemlist","itemData","shareCardData","alanyticView","itemCardText","Number","currentPrice","shareTotalProfit","averageEntryPrice","StyleSheet","create","height","marginTop","button","margin","marginLeft","marginRight","marginBottom","shadowColor","shadowOpacity","shadowRadius","shadowOffset","routingButton","alignSelf","flexDirection","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Button, FlatList, Text } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport * as financeServices from \"../services/financeServices\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { PieChart } from \"react-native-chart-kit\";\r\n\r\nconst ItemList = (pops) => {\r\n  const isFocused = useIsFocused();\r\n\r\n  const [itemList, setItemList] = useState([]);\r\n  const [portofolioValue, setPortofolioValue] = useState();\r\n  const [chartData, setchartData] = useState([]);\r\n\r\n  function getRandomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  async function setPortofolioValueHandler() {\r\n    var sharesAnalyticsList =\r\n      await financeServices.default.getAnalyticsForAllShares();\r\n    var portofolioValue = 0;\r\n    var data = [];\r\n\r\n    sharesAnalyticsList.map((item) => {\r\n      portofolioValue += item.shareTotalValue;\r\n      data.push({\r\n        name: item.symbol,\r\n        population: item.shareTotalValue,\r\n        color: getRandomColor(),\r\n        legendFontColor: \"#7F7F7F\",\r\n        legendFontSize: 15,\r\n      });\r\n    });\r\n    setchartData(data);\r\n    setPortofolioValue(portofolioValue.toFixed(2));\r\n  }\r\n\r\n  async function setItemListHandler() {\r\n    setItemList(await financeServices.default.getAnalyticsForAllShares());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setItemListHandler();\r\n      setPortofolioValueHandler();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  return (\r\n    <View style={styles.listContainer}>\r\n      <View>\r\n        <View style={styles.portofolioValueText}>\r\n          <Text style={styles.portofolioValueText}>\r\n            Portofolio value {portofolioValue}\r\n          </Text>\r\n        </View>\r\n        <PieChart\r\n          data={chartData}\r\n          width={Dimensions.get(\"window\").width}\r\n          height={220}\r\n          accessor=\"population\"\r\n          backgroundColor=\"transparent\"\r\n          paddingLeft=\"15\"\r\n          chartConfig={{\r\n            backgroundColor: \"#e26a00\",\r\n            backgroundGradientFrom: \"#fb8c00\",\r\n            backgroundGradientTo: \"#ffa726\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16,\r\n            },\r\n          }}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        style={styles.itemlist}\r\n        data={itemList}\r\n        renderItem={(itemData) => (\r\n          <View key={itemData.item.symbol} style={styles.shareCardData}>\r\n            <View style={styles.alanyticView}>\r\n              <Text style={styles.itemCardText}>Symbol </Text>\r\n              <Text style={styles.itemCardText}>{itemData.item.symbol}</Text>\r\n            </View>\r\n            <View style={styles.alanyticView}>\r\n              <Text style={styles.itemCardText}>Current Price</Text>\r\n              <Text style={styles.itemCardText}>\r\n                {Number(itemData.item.currentPrice).toFixed(2)}\r\n              </Text>\r\n            </View>\r\n            <View style={styles.alanyticView}>\r\n              <Text style={styles.itemCardText}>Total value</Text>\r\n              <Text style={styles.itemCardText}>\r\n                {Number(itemData.item.shareTotalValue).toFixed(2)}\r\n              </Text>\r\n            </View>\r\n            <View style={styles.alanyticView}>\r\n              <Text style={styles.itemCardText}>Profit </Text>\r\n              <Text style={styles.itemCardText}>\r\n                {Number(itemData.item.shareTotalProfit).toFixed(2)}\r\n              </Text>\r\n            </View>\r\n            <View style={styles.alanyticView}>\r\n              <Text style={styles.itemCardText}>Average price</Text>\r\n              <Text style={styles.itemCardText}>\r\n                {Number(itemData.item.averageEntryPrice).toFixed(2)}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listContainer: { width: \"100%\", height: \"80%\", marginTop: \"10%\" },\r\n\r\n  button: { margin: 10 },\r\n  itemlist: { height: \"80%\" },\r\n  shareCardData: {\r\n    height: 120,\r\n    marginLeft: 19,\r\n    marginRight: 31,\r\n    marginBottom: \"2%\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000000\",\r\n    shadowOpacity: 1,\r\n    shadowRadius: 2,\r\n    shadowOffset: {\r\n      height: 1,\r\n      width: 1,\r\n    },\r\n  },\r\n  routingButton: {\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  alanyticView: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  itemCardText: {\r\n    color: \"#374046\",\r\n  },\r\n  portofolioValue: {\r\n    width: \"90%\",\r\n  },\r\n  portofolioValueText: {\r\n    width: \"80%\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginLeft: \"10%\",\r\n\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000000\",\r\n    shadowOpacity: 1,\r\n    shadowRadius: 2,\r\n    shadowOffset: {\r\n      height: 1,\r\n      width: 1,\r\n    },\r\n  },\r\n});\r\n\r\nexport default ItemList;\r\n"]},"metadata":{},"sourceType":"module"}