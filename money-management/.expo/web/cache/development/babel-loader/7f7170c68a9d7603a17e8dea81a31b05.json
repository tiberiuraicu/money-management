{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react native\\\\money-management-project\\\\money-management\\\\components\\\\AddNewTransaction\\\\AddNewTransaction.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SearchableDropdown from \"react-native-searchable-dropdown\";\nimport financeServices from \"../../services/financeServices\";\nimport styles from \"./AddNewTransaction.styles\";\nimport * as transactionServices from \"./AddNewTransaction.services\";\nimport * as storage from \"../../services/storageServices\";\n\nvar AddNewTransaction = function AddNewTransaction() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      symbol = _useState2[0],\n      setSymbol = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      priceAtBuy = _useState4[0],\n      setPriceAtBuy = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      investedAmount = _useState6[0],\n      setInvestedAmount = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      autocompleteNames = _useState8[0],\n      setAutocompleteNames = _useState8[1];\n\n  function setAutocompleteNamesHandler(searchTerm) {\n    return _regeneratorRuntime.async(function setAutocompleteNamesHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSymbol(searchTerm);\n            _context.t0 = setAutocompleteNames;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(financeServices.getAutoCompleteData(searchTerm));\n\n          case 4:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function addNewTransaction() {\n    var transaction;\n    return _regeneratorRuntime.async(function addNewTransaction$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            transaction = {\n              priceAtBuy: priceAtBuy,\n              investedAmount: investedAmount,\n              transactionKey: Math.random().toString()\n            };\n            transactionServices.addTransaction(transaction, symbol);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var clearAllData = function clearAllData() {\n    storage.default.clearAllData();\n  };\n\n  var flatListStyle = function flatListStyle() {\n    if (autocompleteNames.length == 0) return {\n      height: 0\n    };else return {\n      height: 20\n    };\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: symbol,\n    style: styles.textInput,\n    placeholder: \" Search term\",\n    placeholderTextColor: \"#788793\",\n    onChangeText: setAutocompleteNamesHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: flatListStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: autocompleteNames,\n    keyboardShouldPersistTaps: \"always\",\n    renderItem: function renderItem(itemData) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setSymbol(itemData.item.symbol);\n          setAutocompleteNames([]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        key: itemData.item.name,\n        style: styles.shareCardData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.alanyticView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, itemData.item.symbol), React.createElement(Text, {\n        style: styles.itemCardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, itemData.item.name))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    style: styles.textInput,\n    keyboardType: \"numeric\",\n    placeholder: \" Price at buy\",\n    placeholderTextColor: \"#788793\",\n    onChangeText: setPriceAtBuy,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \" Invested amount\",\n    keyboardType: \"numeric\",\n    placeholderTextColor: \"#788793\",\n    onChangeText: setInvestedAmount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.addTransactionButton,\n    onPress: addNewTransaction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.addTransactionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"ADD TRANSACTION\"))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    style: styles.button,\n    title: \"Delete all data\",\n    onPress: clearAllData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddNewTransaction;","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/components/AddNewTransaction/AddNewTransaction.js"],"names":["React","useState","SearchableDropdown","financeServices","styles","transactionServices","storage","AddNewTransaction","symbol","setSymbol","priceAtBuy","setPriceAtBuy","investedAmount","setInvestedAmount","autocompleteNames","setAutocompleteNames","setAutocompleteNamesHandler","searchTerm","getAutoCompleteData","addNewTransaction","transaction","transactionKey","Math","random","toString","addTransaction","clearAllData","default","flatListStyle","length","height","container","inputContainer","textInput","itemData","item","name","shareCardData","alanyticView","itemCardText","addTransactionButton","addTransactionText","button"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,mBAAZ;AACA,OAAO,KAAKC,OAAZ;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AAEA,mBAAoCR,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA4CV,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAkDZ,QAAQ,CAAC,EAAD,CAA1D;AAAA;AAAA,MAAOa,iBAAP;AAAA,MAA0BC,oBAA1B;;AAEA,WAAeC,2BAAf,CAA2CC,UAA3C;AAAA;AAAA;AAAA;AAAA;AACER,YAAAA,SAAS,CAACQ,UAAD,CAAT;AADF,0BAEEF,oBAFF;AAAA;AAAA,6CAE6BZ,eAAe,CAACe,mBAAhB,CAAoCD,UAApC,CAF7B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,WAAeE,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,WADR,GACsB;AAClBV,cAAAA,UAAU,EAAEA,UADM;AAElBE,cAAAA,cAAc,EAAEA,cAFE;AAGlBS,cAAAA,cAAc,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAHE,aADtB;AAMEnB,YAAAA,mBAAmB,CAACoB,cAApB,CAAmCL,WAAnC,EAAgDZ,MAAhD;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,MAAMkB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBpB,IAAAA,OAAO,CAACqB,OAAR,CAAgBD,YAAhB;AACD,GAFD;;AAGA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAId,iBAAiB,CAACe,MAAlB,IAA4B,CAAhC,EAAmC,OAAO;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAP,CAAnC,KACK,OAAO;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAAP;AACN,GAHD;;AAIA,SACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,SADhB;AAEE,IAAA,yBAAyB,EAAE,SAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAExB,MADT;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAAC6B,SAFhB;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,oBAAoB,EAAC,SAJvB;AAKE,IAAA,YAAY,EAAEjB,2BALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEd,iBADR;AAEE,IAAA,yBAAyB,EAAC,QAF5B;AAGE,IAAA,UAAU,EAAE,oBAACoB,QAAD;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbzB,UAAAA,SAAS,CAACyB,QAAQ,CAACC,IAAT,CAAc3B,MAAf,CAAT;AACAO,UAAAA,oBAAoB,CAAC,EAAD,CAApB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEmB,QAAQ,CAACC,IAAT,CAAcC,IAAzB;AAA+B,QAAA,KAAK,EAAEhC,MAAM,CAACiC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACkC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElC,MAAM,CAACmC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,CAACC,IAAT,CAAc3B,MADjB,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACmC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,CAACC,IAAT,CAAcC,IADjB,CAJF,CADF,CANF,CADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAiCE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEhC,MAAM,CAAC6B,SADhB;AAEE,IAAA,YAAY,EAAC,SAFf;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,oBAAoB,EAAC,SAJvB;AAKE,IAAA,YAAY,EAAEtB,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAwCE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAAC6B,SADhB;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,YAAY,EAAC,SAHf;AAIE,IAAA,oBAAoB,EAAC,SAJvB;AAKE,IAAA,YAAY,EAAEpB,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,EA+CE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACoC,oBADhB;AAEE,IAAA,OAAO,EAAErB,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACqC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CA/CF,CAJF,EA0DE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAErC,MAAM,CAACsC,MADhB;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,OAAO,EAAEhB,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1DF,CADF;AAoED,CAhGD;;AAkGA,eAAenB,iBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  SafeAreaView,\r\n  Button,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport SearchableDropdown from \"react-native-searchable-dropdown\";\r\nimport financeServices from \"../../services/financeServices\";\r\nimport styles from \"./AddNewTransaction.styles\";\r\nimport * as transactionServices from \"./AddNewTransaction.services\";\r\nimport * as storage from \"../../services/storageServices\";\r\n\r\nconst AddNewTransaction = () => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n\r\n  const [priceAtBuy, setPriceAtBuy] = useState(\"\");\r\n  const [investedAmount, setInvestedAmount] = useState(\"\");\r\n  const [autocompleteNames, setAutocompleteNames] = useState([]);\r\n\r\n  async function setAutocompleteNamesHandler(searchTerm) {\r\n    setSymbol(searchTerm);\r\n    setAutocompleteNames(await financeServices.getAutoCompleteData(searchTerm));\r\n  }\r\n\r\n  async function addNewTransaction() {\r\n    const transaction = {\r\n      priceAtBuy: priceAtBuy,\r\n      investedAmount: investedAmount,\r\n      transactionKey: Math.random().toString(),\r\n    };\r\n    transactionServices.addTransaction(transaction, symbol);\r\n  }\r\n\r\n  const clearAllData = () => {\r\n    storage.default.clearAllData();\r\n  };\r\n  const flatListStyle = () => {\r\n    if (autocompleteNames.length == 0) return { height: 0 };\r\n    else return { height: 20 };\r\n  };\r\n  return (\r\n    <SafeAreaView\r\n      style={styles.container}\r\n      keyboardShouldPersistTaps={\"handled\"}\r\n    >\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          value={symbol}\r\n          style={styles.textInput}\r\n          placeholder=\" Search term\"\r\n          placeholderTextColor=\"#788793\"\r\n          onChangeText={setAutocompleteNamesHandler}\r\n        />\r\n        <View style={flatListStyle}>\r\n          <FlatList\r\n            data={autocompleteNames}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            renderItem={(itemData) => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setSymbol(itemData.item.symbol);\r\n                  setAutocompleteNames([]);\r\n                }}\r\n              >\r\n                <View key={itemData.item.name} style={styles.shareCardData}>\r\n                  <View style={styles.alanyticView}>\r\n                    <Text style={styles.itemCardText}>\r\n                      {itemData.item.symbol}\r\n                    </Text>\r\n                    <Text style={styles.itemCardText}>\r\n                      {itemData.item.name}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          keyboardType=\"numeric\"\r\n          placeholder=\" Price at buy\"\r\n          placeholderTextColor=\"#788793\"\r\n          onChangeText={setPriceAtBuy}\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\" Invested amount\"\r\n          keyboardType=\"numeric\"\r\n          placeholderTextColor=\"#788793\"\r\n          onChangeText={setInvestedAmount}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.addTransactionButton}\r\n          onPress={addNewTransaction}\r\n        >\r\n          <Text style={styles.addTransactionText}>ADD TRANSACTION</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View>\r\n        <Button\r\n          style={styles.button}\r\n          title=\"Delete all data\"\r\n          onPress={clearAllData}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddNewTransaction;\r\n"]},"metadata":{},"sourceType":"module"}