{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport storageServices from \"../../services/storageServices\";\nimport financeServices from \"../../services/financeServices\";\nexport function getWatchList() {\n  var watchList, item, quote;\n  return _regeneratorRuntime.async(function getWatchList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(storageServices.getItem(\"watchlist\"));\n\n        case 2:\n          watchList = _context.sent;\n          watchList = JSON.parse(watchList);\n          _context.t0 = _regeneratorRuntime.keys(watchList);\n\n        case 5:\n          if ((_context.t1 = _context.t0()).done) {\n            _context.next = 18;\n            break;\n          }\n\n          item = _context.t1.value;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(financeServices.getSharePrice(item));\n\n        case 9:\n          quote = _context.sent;\n          watchList[item][\"regularMarketPrice\"] = quote.price.regularMarketPrice;\n          watchList[item][\"regularMarketChange\"] = quote.price.regularMarketChange.toFixed(2);\n          watchList[item][\"regularMarketChangePercent\"] = (Number(quote.price.regularMarketChangePercent) * 100).toFixed(2);\n          watchList[item][\"regularMarketVolume\"] = quote.price.regularMarketVolume;\n          watchList[item][\"marketState\"] = quote.price.marketState;\n\n          if (quote.price.marketState === \"PRE\") {\n            watchList[item][\"extendedHoursPrice\"] = quote.price.preMarketPrice;\n            watchList[item][\"extendedHoursChange\"] = quote.price.preMarketChange.toFixed(2);\n            watchList[item][\"extendedHoursChangePercent\"] = Number(quote.price.preMarketChangePercent * 100).toFixed(2);\n          } else if (quote.price.marketState === \"POST\") {\n            watchList[item][\"extendedHoursPrice\"] = quote.price.postMarketPrice;\n            watchList[item][\"extendedHoursChange\"] = quote.price.postMarketChange;\n            watchList[item][\"extendedHoursChangePercent\"] = Number(quote.price.postMarketChangePercent * 100).toFixed(2);\n          }\n\n          _context.next = 5;\n          break;\n\n        case 18:\n          return _context.abrupt(\"return\", Object.values(watchList));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/react native/money-management-project/money-management/components/WatchList/WatchList.services.js"],"names":["storageServices","financeServices","getWatchList","getItem","watchList","JSON","parse","item","getSharePrice","quote","price","regularMarketPrice","regularMarketChange","toFixed","Number","regularMarketChangePercent","regularMarketVolume","marketState","preMarketPrice","preMarketChange","preMarketChangePercent","postMarketPrice","postMarketChange","postMarketChangePercent","Object","values"],"mappings":";AAAA,OAAOA,eAAP;AACA,OAAOC,eAAP;AAEA,OAAO,SAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiBF,eAAe,CAACG,OAAhB,CAAwB,WAAxB,CADjB;;AAAA;AACDC,UAAAA,SADC;AAELA,UAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAZ;AAFK,iDAGYA,SAHZ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGIG,UAAAA,IAHJ;AAAA;AAAA,2CAIeN,eAAe,CAACO,aAAhB,CAA8BD,IAA9B,CAJf;;AAAA;AAICE,UAAAA,KAJD;AAKHL,UAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,oBAAhB,IAAwCE,KAAK,CAACC,KAAN,CAAYC,kBAApD;AACAP,UAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,qBAAhB,IACEE,KAAK,CAACC,KAAN,CAAYE,mBAAZ,CAAgCC,OAAhC,CAAwC,CAAxC,CADF;AAEAT,UAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,4BAAhB,IAAgD,CAC9CO,MAAM,CAACL,KAAK,CAACC,KAAN,CAAYK,0BAAb,CAAN,GAAiD,GADH,EAE9CF,OAF8C,CAEtC,CAFsC,CAAhD;AAIAT,UAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,qBAAhB,IAAyCE,KAAK,CAACC,KAAN,CAAYM,mBAArD;AACAZ,UAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,aAAhB,IAAiCE,KAAK,CAACC,KAAN,CAAYO,WAA7C;;AACA,cAAIR,KAAK,CAACC,KAAN,CAAYO,WAAZ,KAA4B,KAAhC,EAAuC;AACrCb,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,oBAAhB,IAAwCE,KAAK,CAACC,KAAN,CAAYQ,cAApD;AACAd,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,qBAAhB,IACEE,KAAK,CAACC,KAAN,CAAYS,eAAZ,CAA4BN,OAA5B,CAAoC,CAApC,CADF;AAEAT,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,4BAAhB,IAAgDO,MAAM,CACpDL,KAAK,CAACC,KAAN,CAAYU,sBAAZ,GAAqC,GADe,CAAN,CAE9CP,OAF8C,CAEtC,CAFsC,CAAhD;AAGD,WAPD,MAOO,IAAIJ,KAAK,CAACC,KAAN,CAAYO,WAAZ,KAA4B,MAAhC,EAAwC;AAC7Cb,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,oBAAhB,IAAwCE,KAAK,CAACC,KAAN,CAAYW,eAApD;AACAjB,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,qBAAhB,IAAyCE,KAAK,CAACC,KAAN,CAAYY,gBAArD;AACAlB,YAAAA,SAAS,CAACG,IAAD,CAAT,CAAgB,4BAAhB,IAAgDO,MAAM,CACpDL,KAAK,CAACC,KAAN,CAAYa,uBAAZ,GAAsC,GADc,CAAN,CAE9CV,OAF8C,CAEtC,CAFsC,CAAhD;AAGD;;AA3BE;AAAA;;AAAA;AAAA,2CA6BEW,MAAM,CAACC,MAAP,CAAcrB,SAAd,CA7BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import storageServices from \"../../services/storageServices\";\r\nimport financeServices from \"../../services/financeServices\";\r\n\r\nexport async function getWatchList() {\r\n  var watchList = await storageServices.getItem(\"watchlist\");\r\n  watchList = JSON.parse(watchList);\r\n  for (let item in watchList) {\r\n    let quote = await financeServices.getSharePrice(item);\r\n    watchList[item][\"regularMarketPrice\"] = quote.price.regularMarketPrice;\r\n    watchList[item][\"regularMarketChange\"] =\r\n      quote.price.regularMarketChange.toFixed(2);\r\n    watchList[item][\"regularMarketChangePercent\"] = (\r\n      Number(quote.price.regularMarketChangePercent) * 100\r\n    ).toFixed(2);\r\n\r\n    watchList[item][\"regularMarketVolume\"] = quote.price.regularMarketVolume;\r\n    watchList[item][\"marketState\"] = quote.price.marketState;\r\n    if (quote.price.marketState === \"PRE\") {\r\n      watchList[item][\"extendedHoursPrice\"] = quote.price.preMarketPrice;\r\n      watchList[item][\"extendedHoursChange\"] =\r\n        quote.price.preMarketChange.toFixed(2);\r\n      watchList[item][\"extendedHoursChangePercent\"] = Number(\r\n        quote.price.preMarketChangePercent * 100\r\n      ).toFixed(2);\r\n    } else if (quote.price.marketState === \"POST\") {\r\n      watchList[item][\"extendedHoursPrice\"] = quote.price.postMarketPrice;\r\n      watchList[item][\"extendedHoursChange\"] = quote.price.postMarketChange;\r\n      watchList[item][\"extendedHoursChangePercent\"] = Number(\r\n        quote.price.postMarketChangePercent * 100\r\n      ).toFixed(2);\r\n    }\r\n  }\r\n  return Object.values(watchList);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}